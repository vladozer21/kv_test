plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'scala'
}

group 'chat'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://repo.akka.io/maven"
    }
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'irc_chat'
    mainClass = 'irc_chat.StartMain'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}
def versions = [
        ScalaBinary: "2.13"
]
dependencies {
    implementation 'org.scala-lang:scala-library:2.13.8'

    implementation platform("com.typesafe.akka:akka-bom_${versions.ScalaBinary}:2.9.1")
    implementation "com.typesafe.akka:akka-serialization-jackson_${versions.ScalaBinary}"
    implementation "com.typesafe.akka:akka-cluster-sharding-typed_${versions.ScalaBinary}"

    implementation "com.typesafe.akka:akka-actor_${versions.ScalaBinary}"
    testImplementation "com.typesafe.akka:akka-testkit_${versions.ScalaBinary}"

    implementation "com.typesafe.akka:akka-actor-typed_${versions.ScalaBinary}"
    testImplementation "com.typesafe.akka:akka-actor-testkit-typed_${versions.ScalaBinary}"

    implementation platform("com.typesafe.akka:akka-bom_${versions.ScalaBinary}:2.9.1")

    implementation "com.typesafe.akka:akka-cluster-typed_${versions.ScalaBinary}"

    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}